precision highp float;
using namespace std;
#import <utils>
#import <SparkVATpacked.sca>
#import <MatCap.sca>

// @param[default=1.0] normalScale
// @param[default=1.0] normalTile
// @param[default=0.0] frame
// @param[default=1.0] scaleFactor
// @return color
// @return position
void main(  optional<std::Texture2d> matcapTex,
            optional<std::Texture2d> normalTex,
            optional<std::Texture2d> positionHigh,
            optional<std::Texture2d> positionLow,
            optional<std::Texture2d> normalHigh,
            optional<std::Texture2d> normalLow,
            optional<float> scaleFactor,
            float normalScale,
            float normalTile,
            float frame,
            int chunks,
            out vec4 Color,
            out vec4 Position)

{
  // Attributes
  frame = -(1.-frame)*1./float(chunks);

  mat3 tangentFrame = VATgetTangentFrame(normalHigh, normalLow, frame);
  vec2 calculatedNormal = calculateNormal(normalTex, tangentFrame, normalScale, normalTile);

  Color = MatCapColor(matcapTex, calculatedNormal);
  Position = VATposition(positionHigh, positionLow, frame, scaleFactor);
}
